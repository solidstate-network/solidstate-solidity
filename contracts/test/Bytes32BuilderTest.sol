// SPDX-License-Identifier: MIT

pragma solidity ^0.8.24;

import { Bytes32Builder } from '../data/Bytes32Builder.sol';

/**
 * @title Procedurally generated Bytes32Builder test contract
 * @dev custom solution is required because there is no other way to access memory struct post-operation
 **/
contract Bytes32BuilderTest {
    using Bytes32Builder for Bytes32Builder.Builder;

    function parseBytes1(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes1 element) {
        return self.parseBytes1(offset);
    }

    function pushBytes1(
        Bytes32Builder.Builder memory self,
        bytes1 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes1(element);
        return self;
    }

    function popBytes1(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes1 element) {
        element = self.popBytes1();
        return (self, element);
    }

    function shiftBytes1(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes1 element) {
        element = self.shiftBytes1();
        return (self, element);
    }

    function unshiftBytes1(
        Bytes32Builder.Builder memory self,
        bytes1 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes1(element);
        return self;
    }
    function parseInt8(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int8 element) {
        return self.parseInt8(offset);
    }

    function pushInt8(
        Bytes32Builder.Builder memory self,
        int8 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt8(element);
        return self;
    }

    function popInt8(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int8 element) {
        element = self.popInt8();
        return (self, element);
    }

    function shiftInt8(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int8 element) {
        element = self.shiftInt8();
        return (self, element);
    }

    function unshiftInt8(
        Bytes32Builder.Builder memory self,
        int8 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt8(element);
        return self;
    }
    function parseUint8(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint8 element) {
        return self.parseUint8(offset);
    }

    function pushUint8(
        Bytes32Builder.Builder memory self,
        uint8 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint8(element);
        return self;
    }

    function popUint8(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint8 element) {
        element = self.popUint8();
        return (self, element);
    }

    function shiftUint8(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint8 element) {
        element = self.shiftUint8();
        return (self, element);
    }

    function unshiftUint8(
        Bytes32Builder.Builder memory self,
        uint8 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint8(element);
        return self;
    }
    function parseBool(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bool element) {
        return self.parseBool(offset);
    }

    function pushBool(
        Bytes32Builder.Builder memory self,
        bool element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBool(element);
        return self;
    }

    function popBool(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bool element) {
        element = self.popBool();
        return (self, element);
    }

    function shiftBool(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bool element) {
        element = self.shiftBool();
        return (self, element);
    }

    function unshiftBool(
        Bytes32Builder.Builder memory self,
        bool element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBool(element);
        return self;
    }
    function parseBytes2(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes2 element) {
        return self.parseBytes2(offset);
    }

    function pushBytes2(
        Bytes32Builder.Builder memory self,
        bytes2 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes2(element);
        return self;
    }

    function popBytes2(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes2 element) {
        element = self.popBytes2();
        return (self, element);
    }

    function shiftBytes2(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes2 element) {
        element = self.shiftBytes2();
        return (self, element);
    }

    function unshiftBytes2(
        Bytes32Builder.Builder memory self,
        bytes2 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes2(element);
        return self;
    }
    function parseInt16(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int16 element) {
        return self.parseInt16(offset);
    }

    function pushInt16(
        Bytes32Builder.Builder memory self,
        int16 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt16(element);
        return self;
    }

    function popInt16(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int16 element) {
        element = self.popInt16();
        return (self, element);
    }

    function shiftInt16(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int16 element) {
        element = self.shiftInt16();
        return (self, element);
    }

    function unshiftInt16(
        Bytes32Builder.Builder memory self,
        int16 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt16(element);
        return self;
    }
    function parseUint16(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint16 element) {
        return self.parseUint16(offset);
    }

    function pushUint16(
        Bytes32Builder.Builder memory self,
        uint16 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint16(element);
        return self;
    }

    function popUint16(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint16 element) {
        element = self.popUint16();
        return (self, element);
    }

    function shiftUint16(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint16 element) {
        element = self.shiftUint16();
        return (self, element);
    }

    function unshiftUint16(
        Bytes32Builder.Builder memory self,
        uint16 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint16(element);
        return self;
    }
    function parseBytes3(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes3 element) {
        return self.parseBytes3(offset);
    }

    function pushBytes3(
        Bytes32Builder.Builder memory self,
        bytes3 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes3(element);
        return self;
    }

    function popBytes3(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes3 element) {
        element = self.popBytes3();
        return (self, element);
    }

    function shiftBytes3(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes3 element) {
        element = self.shiftBytes3();
        return (self, element);
    }

    function unshiftBytes3(
        Bytes32Builder.Builder memory self,
        bytes3 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes3(element);
        return self;
    }
    function parseInt24(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int24 element) {
        return self.parseInt24(offset);
    }

    function pushInt24(
        Bytes32Builder.Builder memory self,
        int24 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt24(element);
        return self;
    }

    function popInt24(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int24 element) {
        element = self.popInt24();
        return (self, element);
    }

    function shiftInt24(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int24 element) {
        element = self.shiftInt24();
        return (self, element);
    }

    function unshiftInt24(
        Bytes32Builder.Builder memory self,
        int24 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt24(element);
        return self;
    }
    function parseUint24(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint24 element) {
        return self.parseUint24(offset);
    }

    function pushUint24(
        Bytes32Builder.Builder memory self,
        uint24 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint24(element);
        return self;
    }

    function popUint24(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint24 element) {
        element = self.popUint24();
        return (self, element);
    }

    function shiftUint24(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint24 element) {
        element = self.shiftUint24();
        return (self, element);
    }

    function unshiftUint24(
        Bytes32Builder.Builder memory self,
        uint24 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint24(element);
        return self;
    }
    function parseBytes4(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes4 element) {
        return self.parseBytes4(offset);
    }

    function pushBytes4(
        Bytes32Builder.Builder memory self,
        bytes4 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes4(element);
        return self;
    }

    function popBytes4(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes4 element) {
        element = self.popBytes4();
        return (self, element);
    }

    function shiftBytes4(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes4 element) {
        element = self.shiftBytes4();
        return (self, element);
    }

    function unshiftBytes4(
        Bytes32Builder.Builder memory self,
        bytes4 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes4(element);
        return self;
    }
    function parseInt32(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int32 element) {
        return self.parseInt32(offset);
    }

    function pushInt32(
        Bytes32Builder.Builder memory self,
        int32 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt32(element);
        return self;
    }

    function popInt32(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int32 element) {
        element = self.popInt32();
        return (self, element);
    }

    function shiftInt32(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int32 element) {
        element = self.shiftInt32();
        return (self, element);
    }

    function unshiftInt32(
        Bytes32Builder.Builder memory self,
        int32 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt32(element);
        return self;
    }
    function parseUint32(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint32 element) {
        return self.parseUint32(offset);
    }

    function pushUint32(
        Bytes32Builder.Builder memory self,
        uint32 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint32(element);
        return self;
    }

    function popUint32(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint32 element) {
        element = self.popUint32();
        return (self, element);
    }

    function shiftUint32(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint32 element) {
        element = self.shiftUint32();
        return (self, element);
    }

    function unshiftUint32(
        Bytes32Builder.Builder memory self,
        uint32 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint32(element);
        return self;
    }
    function parseBytes5(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes5 element) {
        return self.parseBytes5(offset);
    }

    function pushBytes5(
        Bytes32Builder.Builder memory self,
        bytes5 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes5(element);
        return self;
    }

    function popBytes5(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes5 element) {
        element = self.popBytes5();
        return (self, element);
    }

    function shiftBytes5(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes5 element) {
        element = self.shiftBytes5();
        return (self, element);
    }

    function unshiftBytes5(
        Bytes32Builder.Builder memory self,
        bytes5 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes5(element);
        return self;
    }
    function parseInt40(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int40 element) {
        return self.parseInt40(offset);
    }

    function pushInt40(
        Bytes32Builder.Builder memory self,
        int40 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt40(element);
        return self;
    }

    function popInt40(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int40 element) {
        element = self.popInt40();
        return (self, element);
    }

    function shiftInt40(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int40 element) {
        element = self.shiftInt40();
        return (self, element);
    }

    function unshiftInt40(
        Bytes32Builder.Builder memory self,
        int40 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt40(element);
        return self;
    }
    function parseUint40(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint40 element) {
        return self.parseUint40(offset);
    }

    function pushUint40(
        Bytes32Builder.Builder memory self,
        uint40 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint40(element);
        return self;
    }

    function popUint40(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint40 element) {
        element = self.popUint40();
        return (self, element);
    }

    function shiftUint40(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint40 element) {
        element = self.shiftUint40();
        return (self, element);
    }

    function unshiftUint40(
        Bytes32Builder.Builder memory self,
        uint40 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint40(element);
        return self;
    }
    function parseBytes6(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes6 element) {
        return self.parseBytes6(offset);
    }

    function pushBytes6(
        Bytes32Builder.Builder memory self,
        bytes6 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes6(element);
        return self;
    }

    function popBytes6(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes6 element) {
        element = self.popBytes6();
        return (self, element);
    }

    function shiftBytes6(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes6 element) {
        element = self.shiftBytes6();
        return (self, element);
    }

    function unshiftBytes6(
        Bytes32Builder.Builder memory self,
        bytes6 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes6(element);
        return self;
    }
    function parseInt48(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int48 element) {
        return self.parseInt48(offset);
    }

    function pushInt48(
        Bytes32Builder.Builder memory self,
        int48 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt48(element);
        return self;
    }

    function popInt48(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int48 element) {
        element = self.popInt48();
        return (self, element);
    }

    function shiftInt48(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int48 element) {
        element = self.shiftInt48();
        return (self, element);
    }

    function unshiftInt48(
        Bytes32Builder.Builder memory self,
        int48 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt48(element);
        return self;
    }
    function parseUint48(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint48 element) {
        return self.parseUint48(offset);
    }

    function pushUint48(
        Bytes32Builder.Builder memory self,
        uint48 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint48(element);
        return self;
    }

    function popUint48(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint48 element) {
        element = self.popUint48();
        return (self, element);
    }

    function shiftUint48(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint48 element) {
        element = self.shiftUint48();
        return (self, element);
    }

    function unshiftUint48(
        Bytes32Builder.Builder memory self,
        uint48 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint48(element);
        return self;
    }
    function parseBytes7(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes7 element) {
        return self.parseBytes7(offset);
    }

    function pushBytes7(
        Bytes32Builder.Builder memory self,
        bytes7 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes7(element);
        return self;
    }

    function popBytes7(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes7 element) {
        element = self.popBytes7();
        return (self, element);
    }

    function shiftBytes7(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes7 element) {
        element = self.shiftBytes7();
        return (self, element);
    }

    function unshiftBytes7(
        Bytes32Builder.Builder memory self,
        bytes7 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes7(element);
        return self;
    }
    function parseInt56(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int56 element) {
        return self.parseInt56(offset);
    }

    function pushInt56(
        Bytes32Builder.Builder memory self,
        int56 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt56(element);
        return self;
    }

    function popInt56(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int56 element) {
        element = self.popInt56();
        return (self, element);
    }

    function shiftInt56(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int56 element) {
        element = self.shiftInt56();
        return (self, element);
    }

    function unshiftInt56(
        Bytes32Builder.Builder memory self,
        int56 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt56(element);
        return self;
    }
    function parseUint56(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint56 element) {
        return self.parseUint56(offset);
    }

    function pushUint56(
        Bytes32Builder.Builder memory self,
        uint56 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint56(element);
        return self;
    }

    function popUint56(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint56 element) {
        element = self.popUint56();
        return (self, element);
    }

    function shiftUint56(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint56 element) {
        element = self.shiftUint56();
        return (self, element);
    }

    function unshiftUint56(
        Bytes32Builder.Builder memory self,
        uint56 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint56(element);
        return self;
    }
    function parseBytes8(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes8 element) {
        return self.parseBytes8(offset);
    }

    function pushBytes8(
        Bytes32Builder.Builder memory self,
        bytes8 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes8(element);
        return self;
    }

    function popBytes8(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes8 element) {
        element = self.popBytes8();
        return (self, element);
    }

    function shiftBytes8(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes8 element) {
        element = self.shiftBytes8();
        return (self, element);
    }

    function unshiftBytes8(
        Bytes32Builder.Builder memory self,
        bytes8 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes8(element);
        return self;
    }
    function parseInt64(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int64 element) {
        return self.parseInt64(offset);
    }

    function pushInt64(
        Bytes32Builder.Builder memory self,
        int64 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt64(element);
        return self;
    }

    function popInt64(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int64 element) {
        element = self.popInt64();
        return (self, element);
    }

    function shiftInt64(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int64 element) {
        element = self.shiftInt64();
        return (self, element);
    }

    function unshiftInt64(
        Bytes32Builder.Builder memory self,
        int64 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt64(element);
        return self;
    }
    function parseUint64(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint64 element) {
        return self.parseUint64(offset);
    }

    function pushUint64(
        Bytes32Builder.Builder memory self,
        uint64 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint64(element);
        return self;
    }

    function popUint64(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint64 element) {
        element = self.popUint64();
        return (self, element);
    }

    function shiftUint64(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint64 element) {
        element = self.shiftUint64();
        return (self, element);
    }

    function unshiftUint64(
        Bytes32Builder.Builder memory self,
        uint64 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint64(element);
        return self;
    }
    function parseBytes9(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes9 element) {
        return self.parseBytes9(offset);
    }

    function pushBytes9(
        Bytes32Builder.Builder memory self,
        bytes9 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes9(element);
        return self;
    }

    function popBytes9(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes9 element) {
        element = self.popBytes9();
        return (self, element);
    }

    function shiftBytes9(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes9 element) {
        element = self.shiftBytes9();
        return (self, element);
    }

    function unshiftBytes9(
        Bytes32Builder.Builder memory self,
        bytes9 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes9(element);
        return self;
    }
    function parseInt72(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int72 element) {
        return self.parseInt72(offset);
    }

    function pushInt72(
        Bytes32Builder.Builder memory self,
        int72 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt72(element);
        return self;
    }

    function popInt72(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int72 element) {
        element = self.popInt72();
        return (self, element);
    }

    function shiftInt72(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int72 element) {
        element = self.shiftInt72();
        return (self, element);
    }

    function unshiftInt72(
        Bytes32Builder.Builder memory self,
        int72 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt72(element);
        return self;
    }
    function parseUint72(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint72 element) {
        return self.parseUint72(offset);
    }

    function pushUint72(
        Bytes32Builder.Builder memory self,
        uint72 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint72(element);
        return self;
    }

    function popUint72(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint72 element) {
        element = self.popUint72();
        return (self, element);
    }

    function shiftUint72(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint72 element) {
        element = self.shiftUint72();
        return (self, element);
    }

    function unshiftUint72(
        Bytes32Builder.Builder memory self,
        uint72 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint72(element);
        return self;
    }
    function parseBytes10(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes10 element) {
        return self.parseBytes10(offset);
    }

    function pushBytes10(
        Bytes32Builder.Builder memory self,
        bytes10 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes10(element);
        return self;
    }

    function popBytes10(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes10 element) {
        element = self.popBytes10();
        return (self, element);
    }

    function shiftBytes10(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes10 element) {
        element = self.shiftBytes10();
        return (self, element);
    }

    function unshiftBytes10(
        Bytes32Builder.Builder memory self,
        bytes10 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes10(element);
        return self;
    }
    function parseInt80(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int80 element) {
        return self.parseInt80(offset);
    }

    function pushInt80(
        Bytes32Builder.Builder memory self,
        int80 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt80(element);
        return self;
    }

    function popInt80(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int80 element) {
        element = self.popInt80();
        return (self, element);
    }

    function shiftInt80(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int80 element) {
        element = self.shiftInt80();
        return (self, element);
    }

    function unshiftInt80(
        Bytes32Builder.Builder memory self,
        int80 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt80(element);
        return self;
    }
    function parseUint80(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint80 element) {
        return self.parseUint80(offset);
    }

    function pushUint80(
        Bytes32Builder.Builder memory self,
        uint80 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint80(element);
        return self;
    }

    function popUint80(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint80 element) {
        element = self.popUint80();
        return (self, element);
    }

    function shiftUint80(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint80 element) {
        element = self.shiftUint80();
        return (self, element);
    }

    function unshiftUint80(
        Bytes32Builder.Builder memory self,
        uint80 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint80(element);
        return self;
    }
    function parseBytes11(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes11 element) {
        return self.parseBytes11(offset);
    }

    function pushBytes11(
        Bytes32Builder.Builder memory self,
        bytes11 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes11(element);
        return self;
    }

    function popBytes11(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes11 element) {
        element = self.popBytes11();
        return (self, element);
    }

    function shiftBytes11(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes11 element) {
        element = self.shiftBytes11();
        return (self, element);
    }

    function unshiftBytes11(
        Bytes32Builder.Builder memory self,
        bytes11 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes11(element);
        return self;
    }
    function parseInt88(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int88 element) {
        return self.parseInt88(offset);
    }

    function pushInt88(
        Bytes32Builder.Builder memory self,
        int88 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt88(element);
        return self;
    }

    function popInt88(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int88 element) {
        element = self.popInt88();
        return (self, element);
    }

    function shiftInt88(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int88 element) {
        element = self.shiftInt88();
        return (self, element);
    }

    function unshiftInt88(
        Bytes32Builder.Builder memory self,
        int88 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt88(element);
        return self;
    }
    function parseUint88(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint88 element) {
        return self.parseUint88(offset);
    }

    function pushUint88(
        Bytes32Builder.Builder memory self,
        uint88 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint88(element);
        return self;
    }

    function popUint88(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint88 element) {
        element = self.popUint88();
        return (self, element);
    }

    function shiftUint88(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint88 element) {
        element = self.shiftUint88();
        return (self, element);
    }

    function unshiftUint88(
        Bytes32Builder.Builder memory self,
        uint88 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint88(element);
        return self;
    }
    function parseBytes12(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes12 element) {
        return self.parseBytes12(offset);
    }

    function pushBytes12(
        Bytes32Builder.Builder memory self,
        bytes12 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes12(element);
        return self;
    }

    function popBytes12(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes12 element) {
        element = self.popBytes12();
        return (self, element);
    }

    function shiftBytes12(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes12 element) {
        element = self.shiftBytes12();
        return (self, element);
    }

    function unshiftBytes12(
        Bytes32Builder.Builder memory self,
        bytes12 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes12(element);
        return self;
    }
    function parseInt96(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int96 element) {
        return self.parseInt96(offset);
    }

    function pushInt96(
        Bytes32Builder.Builder memory self,
        int96 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt96(element);
        return self;
    }

    function popInt96(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int96 element) {
        element = self.popInt96();
        return (self, element);
    }

    function shiftInt96(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int96 element) {
        element = self.shiftInt96();
        return (self, element);
    }

    function unshiftInt96(
        Bytes32Builder.Builder memory self,
        int96 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt96(element);
        return self;
    }
    function parseUint96(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint96 element) {
        return self.parseUint96(offset);
    }

    function pushUint96(
        Bytes32Builder.Builder memory self,
        uint96 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint96(element);
        return self;
    }

    function popUint96(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint96 element) {
        element = self.popUint96();
        return (self, element);
    }

    function shiftUint96(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint96 element) {
        element = self.shiftUint96();
        return (self, element);
    }

    function unshiftUint96(
        Bytes32Builder.Builder memory self,
        uint96 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint96(element);
        return self;
    }
    function parseBytes13(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes13 element) {
        return self.parseBytes13(offset);
    }

    function pushBytes13(
        Bytes32Builder.Builder memory self,
        bytes13 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes13(element);
        return self;
    }

    function popBytes13(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes13 element) {
        element = self.popBytes13();
        return (self, element);
    }

    function shiftBytes13(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes13 element) {
        element = self.shiftBytes13();
        return (self, element);
    }

    function unshiftBytes13(
        Bytes32Builder.Builder memory self,
        bytes13 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes13(element);
        return self;
    }
    function parseInt104(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int104 element) {
        return self.parseInt104(offset);
    }

    function pushInt104(
        Bytes32Builder.Builder memory self,
        int104 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt104(element);
        return self;
    }

    function popInt104(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int104 element) {
        element = self.popInt104();
        return (self, element);
    }

    function shiftInt104(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int104 element) {
        element = self.shiftInt104();
        return (self, element);
    }

    function unshiftInt104(
        Bytes32Builder.Builder memory self,
        int104 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt104(element);
        return self;
    }
    function parseUint104(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint104 element) {
        return self.parseUint104(offset);
    }

    function pushUint104(
        Bytes32Builder.Builder memory self,
        uint104 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint104(element);
        return self;
    }

    function popUint104(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint104 element) {
        element = self.popUint104();
        return (self, element);
    }

    function shiftUint104(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint104 element) {
        element = self.shiftUint104();
        return (self, element);
    }

    function unshiftUint104(
        Bytes32Builder.Builder memory self,
        uint104 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint104(element);
        return self;
    }
    function parseBytes14(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes14 element) {
        return self.parseBytes14(offset);
    }

    function pushBytes14(
        Bytes32Builder.Builder memory self,
        bytes14 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes14(element);
        return self;
    }

    function popBytes14(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes14 element) {
        element = self.popBytes14();
        return (self, element);
    }

    function shiftBytes14(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes14 element) {
        element = self.shiftBytes14();
        return (self, element);
    }

    function unshiftBytes14(
        Bytes32Builder.Builder memory self,
        bytes14 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes14(element);
        return self;
    }
    function parseInt112(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int112 element) {
        return self.parseInt112(offset);
    }

    function pushInt112(
        Bytes32Builder.Builder memory self,
        int112 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt112(element);
        return self;
    }

    function popInt112(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int112 element) {
        element = self.popInt112();
        return (self, element);
    }

    function shiftInt112(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int112 element) {
        element = self.shiftInt112();
        return (self, element);
    }

    function unshiftInt112(
        Bytes32Builder.Builder memory self,
        int112 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt112(element);
        return self;
    }
    function parseUint112(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint112 element) {
        return self.parseUint112(offset);
    }

    function pushUint112(
        Bytes32Builder.Builder memory self,
        uint112 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint112(element);
        return self;
    }

    function popUint112(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint112 element) {
        element = self.popUint112();
        return (self, element);
    }

    function shiftUint112(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint112 element) {
        element = self.shiftUint112();
        return (self, element);
    }

    function unshiftUint112(
        Bytes32Builder.Builder memory self,
        uint112 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint112(element);
        return self;
    }
    function parseBytes15(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes15 element) {
        return self.parseBytes15(offset);
    }

    function pushBytes15(
        Bytes32Builder.Builder memory self,
        bytes15 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes15(element);
        return self;
    }

    function popBytes15(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes15 element) {
        element = self.popBytes15();
        return (self, element);
    }

    function shiftBytes15(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes15 element) {
        element = self.shiftBytes15();
        return (self, element);
    }

    function unshiftBytes15(
        Bytes32Builder.Builder memory self,
        bytes15 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes15(element);
        return self;
    }
    function parseInt120(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int120 element) {
        return self.parseInt120(offset);
    }

    function pushInt120(
        Bytes32Builder.Builder memory self,
        int120 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt120(element);
        return self;
    }

    function popInt120(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int120 element) {
        element = self.popInt120();
        return (self, element);
    }

    function shiftInt120(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int120 element) {
        element = self.shiftInt120();
        return (self, element);
    }

    function unshiftInt120(
        Bytes32Builder.Builder memory self,
        int120 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt120(element);
        return self;
    }
    function parseUint120(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint120 element) {
        return self.parseUint120(offset);
    }

    function pushUint120(
        Bytes32Builder.Builder memory self,
        uint120 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint120(element);
        return self;
    }

    function popUint120(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint120 element) {
        element = self.popUint120();
        return (self, element);
    }

    function shiftUint120(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint120 element) {
        element = self.shiftUint120();
        return (self, element);
    }

    function unshiftUint120(
        Bytes32Builder.Builder memory self,
        uint120 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint120(element);
        return self;
    }
    function parseBytes16(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes16 element) {
        return self.parseBytes16(offset);
    }

    function pushBytes16(
        Bytes32Builder.Builder memory self,
        bytes16 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes16(element);
        return self;
    }

    function popBytes16(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes16 element) {
        element = self.popBytes16();
        return (self, element);
    }

    function shiftBytes16(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes16 element) {
        element = self.shiftBytes16();
        return (self, element);
    }

    function unshiftBytes16(
        Bytes32Builder.Builder memory self,
        bytes16 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes16(element);
        return self;
    }
    function parseInt128(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int128 element) {
        return self.parseInt128(offset);
    }

    function pushInt128(
        Bytes32Builder.Builder memory self,
        int128 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt128(element);
        return self;
    }

    function popInt128(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int128 element) {
        element = self.popInt128();
        return (self, element);
    }

    function shiftInt128(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int128 element) {
        element = self.shiftInt128();
        return (self, element);
    }

    function unshiftInt128(
        Bytes32Builder.Builder memory self,
        int128 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt128(element);
        return self;
    }
    function parseUint128(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint128 element) {
        return self.parseUint128(offset);
    }

    function pushUint128(
        Bytes32Builder.Builder memory self,
        uint128 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint128(element);
        return self;
    }

    function popUint128(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint128 element) {
        element = self.popUint128();
        return (self, element);
    }

    function shiftUint128(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint128 element) {
        element = self.shiftUint128();
        return (self, element);
    }

    function unshiftUint128(
        Bytes32Builder.Builder memory self,
        uint128 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint128(element);
        return self;
    }
    function parseBytes17(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes17 element) {
        return self.parseBytes17(offset);
    }

    function pushBytes17(
        Bytes32Builder.Builder memory self,
        bytes17 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes17(element);
        return self;
    }

    function popBytes17(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes17 element) {
        element = self.popBytes17();
        return (self, element);
    }

    function shiftBytes17(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes17 element) {
        element = self.shiftBytes17();
        return (self, element);
    }

    function unshiftBytes17(
        Bytes32Builder.Builder memory self,
        bytes17 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes17(element);
        return self;
    }
    function parseInt136(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int136 element) {
        return self.parseInt136(offset);
    }

    function pushInt136(
        Bytes32Builder.Builder memory self,
        int136 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt136(element);
        return self;
    }

    function popInt136(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int136 element) {
        element = self.popInt136();
        return (self, element);
    }

    function shiftInt136(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int136 element) {
        element = self.shiftInt136();
        return (self, element);
    }

    function unshiftInt136(
        Bytes32Builder.Builder memory self,
        int136 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt136(element);
        return self;
    }
    function parseUint136(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint136 element) {
        return self.parseUint136(offset);
    }

    function pushUint136(
        Bytes32Builder.Builder memory self,
        uint136 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint136(element);
        return self;
    }

    function popUint136(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint136 element) {
        element = self.popUint136();
        return (self, element);
    }

    function shiftUint136(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint136 element) {
        element = self.shiftUint136();
        return (self, element);
    }

    function unshiftUint136(
        Bytes32Builder.Builder memory self,
        uint136 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint136(element);
        return self;
    }
    function parseBytes18(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes18 element) {
        return self.parseBytes18(offset);
    }

    function pushBytes18(
        Bytes32Builder.Builder memory self,
        bytes18 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes18(element);
        return self;
    }

    function popBytes18(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes18 element) {
        element = self.popBytes18();
        return (self, element);
    }

    function shiftBytes18(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes18 element) {
        element = self.shiftBytes18();
        return (self, element);
    }

    function unshiftBytes18(
        Bytes32Builder.Builder memory self,
        bytes18 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes18(element);
        return self;
    }
    function parseInt144(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int144 element) {
        return self.parseInt144(offset);
    }

    function pushInt144(
        Bytes32Builder.Builder memory self,
        int144 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt144(element);
        return self;
    }

    function popInt144(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int144 element) {
        element = self.popInt144();
        return (self, element);
    }

    function shiftInt144(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int144 element) {
        element = self.shiftInt144();
        return (self, element);
    }

    function unshiftInt144(
        Bytes32Builder.Builder memory self,
        int144 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt144(element);
        return self;
    }
    function parseUint144(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint144 element) {
        return self.parseUint144(offset);
    }

    function pushUint144(
        Bytes32Builder.Builder memory self,
        uint144 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint144(element);
        return self;
    }

    function popUint144(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint144 element) {
        element = self.popUint144();
        return (self, element);
    }

    function shiftUint144(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint144 element) {
        element = self.shiftUint144();
        return (self, element);
    }

    function unshiftUint144(
        Bytes32Builder.Builder memory self,
        uint144 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint144(element);
        return self;
    }
    function parseBytes19(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes19 element) {
        return self.parseBytes19(offset);
    }

    function pushBytes19(
        Bytes32Builder.Builder memory self,
        bytes19 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes19(element);
        return self;
    }

    function popBytes19(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes19 element) {
        element = self.popBytes19();
        return (self, element);
    }

    function shiftBytes19(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes19 element) {
        element = self.shiftBytes19();
        return (self, element);
    }

    function unshiftBytes19(
        Bytes32Builder.Builder memory self,
        bytes19 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes19(element);
        return self;
    }
    function parseInt152(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int152 element) {
        return self.parseInt152(offset);
    }

    function pushInt152(
        Bytes32Builder.Builder memory self,
        int152 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt152(element);
        return self;
    }

    function popInt152(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int152 element) {
        element = self.popInt152();
        return (self, element);
    }

    function shiftInt152(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int152 element) {
        element = self.shiftInt152();
        return (self, element);
    }

    function unshiftInt152(
        Bytes32Builder.Builder memory self,
        int152 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt152(element);
        return self;
    }
    function parseUint152(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint152 element) {
        return self.parseUint152(offset);
    }

    function pushUint152(
        Bytes32Builder.Builder memory self,
        uint152 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint152(element);
        return self;
    }

    function popUint152(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint152 element) {
        element = self.popUint152();
        return (self, element);
    }

    function shiftUint152(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint152 element) {
        element = self.shiftUint152();
        return (self, element);
    }

    function unshiftUint152(
        Bytes32Builder.Builder memory self,
        uint152 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint152(element);
        return self;
    }
    function parseBytes20(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes20 element) {
        return self.parseBytes20(offset);
    }

    function pushBytes20(
        Bytes32Builder.Builder memory self,
        bytes20 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes20(element);
        return self;
    }

    function popBytes20(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes20 element) {
        element = self.popBytes20();
        return (self, element);
    }

    function shiftBytes20(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes20 element) {
        element = self.shiftBytes20();
        return (self, element);
    }

    function unshiftBytes20(
        Bytes32Builder.Builder memory self,
        bytes20 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes20(element);
        return self;
    }
    function parseInt160(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int160 element) {
        return self.parseInt160(offset);
    }

    function pushInt160(
        Bytes32Builder.Builder memory self,
        int160 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt160(element);
        return self;
    }

    function popInt160(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int160 element) {
        element = self.popInt160();
        return (self, element);
    }

    function shiftInt160(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int160 element) {
        element = self.shiftInt160();
        return (self, element);
    }

    function unshiftInt160(
        Bytes32Builder.Builder memory self,
        int160 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt160(element);
        return self;
    }
    function parseUint160(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint160 element) {
        return self.parseUint160(offset);
    }

    function pushUint160(
        Bytes32Builder.Builder memory self,
        uint160 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint160(element);
        return self;
    }

    function popUint160(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint160 element) {
        element = self.popUint160();
        return (self, element);
    }

    function shiftUint160(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint160 element) {
        element = self.shiftUint160();
        return (self, element);
    }

    function unshiftUint160(
        Bytes32Builder.Builder memory self,
        uint160 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint160(element);
        return self;
    }
    function parseAddress(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (address element) {
        return self.parseAddress(offset);
    }

    function pushAddress(
        Bytes32Builder.Builder memory self,
        address element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushAddress(element);
        return self;
    }

    function popAddress(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, address element) {
        element = self.popAddress();
        return (self, element);
    }

    function shiftAddress(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, address element) {
        element = self.shiftAddress();
        return (self, element);
    }

    function unshiftAddress(
        Bytes32Builder.Builder memory self,
        address element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftAddress(element);
        return self;
    }
    function parseBytes21(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes21 element) {
        return self.parseBytes21(offset);
    }

    function pushBytes21(
        Bytes32Builder.Builder memory self,
        bytes21 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes21(element);
        return self;
    }

    function popBytes21(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes21 element) {
        element = self.popBytes21();
        return (self, element);
    }

    function shiftBytes21(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes21 element) {
        element = self.shiftBytes21();
        return (self, element);
    }

    function unshiftBytes21(
        Bytes32Builder.Builder memory self,
        bytes21 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes21(element);
        return self;
    }
    function parseInt168(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int168 element) {
        return self.parseInt168(offset);
    }

    function pushInt168(
        Bytes32Builder.Builder memory self,
        int168 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt168(element);
        return self;
    }

    function popInt168(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int168 element) {
        element = self.popInt168();
        return (self, element);
    }

    function shiftInt168(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int168 element) {
        element = self.shiftInt168();
        return (self, element);
    }

    function unshiftInt168(
        Bytes32Builder.Builder memory self,
        int168 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt168(element);
        return self;
    }
    function parseUint168(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint168 element) {
        return self.parseUint168(offset);
    }

    function pushUint168(
        Bytes32Builder.Builder memory self,
        uint168 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint168(element);
        return self;
    }

    function popUint168(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint168 element) {
        element = self.popUint168();
        return (self, element);
    }

    function shiftUint168(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint168 element) {
        element = self.shiftUint168();
        return (self, element);
    }

    function unshiftUint168(
        Bytes32Builder.Builder memory self,
        uint168 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint168(element);
        return self;
    }
    function parseBytes22(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes22 element) {
        return self.parseBytes22(offset);
    }

    function pushBytes22(
        Bytes32Builder.Builder memory self,
        bytes22 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes22(element);
        return self;
    }

    function popBytes22(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes22 element) {
        element = self.popBytes22();
        return (self, element);
    }

    function shiftBytes22(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes22 element) {
        element = self.shiftBytes22();
        return (self, element);
    }

    function unshiftBytes22(
        Bytes32Builder.Builder memory self,
        bytes22 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes22(element);
        return self;
    }
    function parseInt176(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int176 element) {
        return self.parseInt176(offset);
    }

    function pushInt176(
        Bytes32Builder.Builder memory self,
        int176 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt176(element);
        return self;
    }

    function popInt176(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int176 element) {
        element = self.popInt176();
        return (self, element);
    }

    function shiftInt176(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int176 element) {
        element = self.shiftInt176();
        return (self, element);
    }

    function unshiftInt176(
        Bytes32Builder.Builder memory self,
        int176 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt176(element);
        return self;
    }
    function parseUint176(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint176 element) {
        return self.parseUint176(offset);
    }

    function pushUint176(
        Bytes32Builder.Builder memory self,
        uint176 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint176(element);
        return self;
    }

    function popUint176(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint176 element) {
        element = self.popUint176();
        return (self, element);
    }

    function shiftUint176(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint176 element) {
        element = self.shiftUint176();
        return (self, element);
    }

    function unshiftUint176(
        Bytes32Builder.Builder memory self,
        uint176 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint176(element);
        return self;
    }
    function parseBytes23(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes23 element) {
        return self.parseBytes23(offset);
    }

    function pushBytes23(
        Bytes32Builder.Builder memory self,
        bytes23 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes23(element);
        return self;
    }

    function popBytes23(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes23 element) {
        element = self.popBytes23();
        return (self, element);
    }

    function shiftBytes23(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes23 element) {
        element = self.shiftBytes23();
        return (self, element);
    }

    function unshiftBytes23(
        Bytes32Builder.Builder memory self,
        bytes23 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes23(element);
        return self;
    }
    function parseInt184(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int184 element) {
        return self.parseInt184(offset);
    }

    function pushInt184(
        Bytes32Builder.Builder memory self,
        int184 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt184(element);
        return self;
    }

    function popInt184(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int184 element) {
        element = self.popInt184();
        return (self, element);
    }

    function shiftInt184(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int184 element) {
        element = self.shiftInt184();
        return (self, element);
    }

    function unshiftInt184(
        Bytes32Builder.Builder memory self,
        int184 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt184(element);
        return self;
    }
    function parseUint184(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint184 element) {
        return self.parseUint184(offset);
    }

    function pushUint184(
        Bytes32Builder.Builder memory self,
        uint184 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint184(element);
        return self;
    }

    function popUint184(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint184 element) {
        element = self.popUint184();
        return (self, element);
    }

    function shiftUint184(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint184 element) {
        element = self.shiftUint184();
        return (self, element);
    }

    function unshiftUint184(
        Bytes32Builder.Builder memory self,
        uint184 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint184(element);
        return self;
    }
    function parseBytes24(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes24 element) {
        return self.parseBytes24(offset);
    }

    function pushBytes24(
        Bytes32Builder.Builder memory self,
        bytes24 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes24(element);
        return self;
    }

    function popBytes24(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes24 element) {
        element = self.popBytes24();
        return (self, element);
    }

    function shiftBytes24(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes24 element) {
        element = self.shiftBytes24();
        return (self, element);
    }

    function unshiftBytes24(
        Bytes32Builder.Builder memory self,
        bytes24 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes24(element);
        return self;
    }
    function parseInt192(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int192 element) {
        return self.parseInt192(offset);
    }

    function pushInt192(
        Bytes32Builder.Builder memory self,
        int192 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt192(element);
        return self;
    }

    function popInt192(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int192 element) {
        element = self.popInt192();
        return (self, element);
    }

    function shiftInt192(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int192 element) {
        element = self.shiftInt192();
        return (self, element);
    }

    function unshiftInt192(
        Bytes32Builder.Builder memory self,
        int192 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt192(element);
        return self;
    }
    function parseUint192(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint192 element) {
        return self.parseUint192(offset);
    }

    function pushUint192(
        Bytes32Builder.Builder memory self,
        uint192 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint192(element);
        return self;
    }

    function popUint192(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint192 element) {
        element = self.popUint192();
        return (self, element);
    }

    function shiftUint192(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint192 element) {
        element = self.shiftUint192();
        return (self, element);
    }

    function unshiftUint192(
        Bytes32Builder.Builder memory self,
        uint192 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint192(element);
        return self;
    }
    function parseBytes25(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes25 element) {
        return self.parseBytes25(offset);
    }

    function pushBytes25(
        Bytes32Builder.Builder memory self,
        bytes25 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes25(element);
        return self;
    }

    function popBytes25(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes25 element) {
        element = self.popBytes25();
        return (self, element);
    }

    function shiftBytes25(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes25 element) {
        element = self.shiftBytes25();
        return (self, element);
    }

    function unshiftBytes25(
        Bytes32Builder.Builder memory self,
        bytes25 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes25(element);
        return self;
    }
    function parseInt200(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int200 element) {
        return self.parseInt200(offset);
    }

    function pushInt200(
        Bytes32Builder.Builder memory self,
        int200 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt200(element);
        return self;
    }

    function popInt200(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int200 element) {
        element = self.popInt200();
        return (self, element);
    }

    function shiftInt200(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int200 element) {
        element = self.shiftInt200();
        return (self, element);
    }

    function unshiftInt200(
        Bytes32Builder.Builder memory self,
        int200 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt200(element);
        return self;
    }
    function parseUint200(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint200 element) {
        return self.parseUint200(offset);
    }

    function pushUint200(
        Bytes32Builder.Builder memory self,
        uint200 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint200(element);
        return self;
    }

    function popUint200(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint200 element) {
        element = self.popUint200();
        return (self, element);
    }

    function shiftUint200(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint200 element) {
        element = self.shiftUint200();
        return (self, element);
    }

    function unshiftUint200(
        Bytes32Builder.Builder memory self,
        uint200 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint200(element);
        return self;
    }
    function parseBytes26(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes26 element) {
        return self.parseBytes26(offset);
    }

    function pushBytes26(
        Bytes32Builder.Builder memory self,
        bytes26 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes26(element);
        return self;
    }

    function popBytes26(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes26 element) {
        element = self.popBytes26();
        return (self, element);
    }

    function shiftBytes26(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes26 element) {
        element = self.shiftBytes26();
        return (self, element);
    }

    function unshiftBytes26(
        Bytes32Builder.Builder memory self,
        bytes26 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes26(element);
        return self;
    }
    function parseInt208(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int208 element) {
        return self.parseInt208(offset);
    }

    function pushInt208(
        Bytes32Builder.Builder memory self,
        int208 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt208(element);
        return self;
    }

    function popInt208(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int208 element) {
        element = self.popInt208();
        return (self, element);
    }

    function shiftInt208(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int208 element) {
        element = self.shiftInt208();
        return (self, element);
    }

    function unshiftInt208(
        Bytes32Builder.Builder memory self,
        int208 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt208(element);
        return self;
    }
    function parseUint208(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint208 element) {
        return self.parseUint208(offset);
    }

    function pushUint208(
        Bytes32Builder.Builder memory self,
        uint208 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint208(element);
        return self;
    }

    function popUint208(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint208 element) {
        element = self.popUint208();
        return (self, element);
    }

    function shiftUint208(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint208 element) {
        element = self.shiftUint208();
        return (self, element);
    }

    function unshiftUint208(
        Bytes32Builder.Builder memory self,
        uint208 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint208(element);
        return self;
    }
    function parseBytes27(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes27 element) {
        return self.parseBytes27(offset);
    }

    function pushBytes27(
        Bytes32Builder.Builder memory self,
        bytes27 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes27(element);
        return self;
    }

    function popBytes27(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes27 element) {
        element = self.popBytes27();
        return (self, element);
    }

    function shiftBytes27(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes27 element) {
        element = self.shiftBytes27();
        return (self, element);
    }

    function unshiftBytes27(
        Bytes32Builder.Builder memory self,
        bytes27 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes27(element);
        return self;
    }
    function parseInt216(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int216 element) {
        return self.parseInt216(offset);
    }

    function pushInt216(
        Bytes32Builder.Builder memory self,
        int216 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt216(element);
        return self;
    }

    function popInt216(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int216 element) {
        element = self.popInt216();
        return (self, element);
    }

    function shiftInt216(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int216 element) {
        element = self.shiftInt216();
        return (self, element);
    }

    function unshiftInt216(
        Bytes32Builder.Builder memory self,
        int216 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt216(element);
        return self;
    }
    function parseUint216(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint216 element) {
        return self.parseUint216(offset);
    }

    function pushUint216(
        Bytes32Builder.Builder memory self,
        uint216 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint216(element);
        return self;
    }

    function popUint216(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint216 element) {
        element = self.popUint216();
        return (self, element);
    }

    function shiftUint216(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint216 element) {
        element = self.shiftUint216();
        return (self, element);
    }

    function unshiftUint216(
        Bytes32Builder.Builder memory self,
        uint216 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint216(element);
        return self;
    }
    function parseBytes28(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes28 element) {
        return self.parseBytes28(offset);
    }

    function pushBytes28(
        Bytes32Builder.Builder memory self,
        bytes28 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes28(element);
        return self;
    }

    function popBytes28(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes28 element) {
        element = self.popBytes28();
        return (self, element);
    }

    function shiftBytes28(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes28 element) {
        element = self.shiftBytes28();
        return (self, element);
    }

    function unshiftBytes28(
        Bytes32Builder.Builder memory self,
        bytes28 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes28(element);
        return self;
    }
    function parseInt224(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int224 element) {
        return self.parseInt224(offset);
    }

    function pushInt224(
        Bytes32Builder.Builder memory self,
        int224 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt224(element);
        return self;
    }

    function popInt224(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int224 element) {
        element = self.popInt224();
        return (self, element);
    }

    function shiftInt224(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int224 element) {
        element = self.shiftInt224();
        return (self, element);
    }

    function unshiftInt224(
        Bytes32Builder.Builder memory self,
        int224 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt224(element);
        return self;
    }
    function parseUint224(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint224 element) {
        return self.parseUint224(offset);
    }

    function pushUint224(
        Bytes32Builder.Builder memory self,
        uint224 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint224(element);
        return self;
    }

    function popUint224(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint224 element) {
        element = self.popUint224();
        return (self, element);
    }

    function shiftUint224(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint224 element) {
        element = self.shiftUint224();
        return (self, element);
    }

    function unshiftUint224(
        Bytes32Builder.Builder memory self,
        uint224 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint224(element);
        return self;
    }
    function parseBytes29(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes29 element) {
        return self.parseBytes29(offset);
    }

    function pushBytes29(
        Bytes32Builder.Builder memory self,
        bytes29 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes29(element);
        return self;
    }

    function popBytes29(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes29 element) {
        element = self.popBytes29();
        return (self, element);
    }

    function shiftBytes29(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes29 element) {
        element = self.shiftBytes29();
        return (self, element);
    }

    function unshiftBytes29(
        Bytes32Builder.Builder memory self,
        bytes29 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes29(element);
        return self;
    }
    function parseInt232(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int232 element) {
        return self.parseInt232(offset);
    }

    function pushInt232(
        Bytes32Builder.Builder memory self,
        int232 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt232(element);
        return self;
    }

    function popInt232(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int232 element) {
        element = self.popInt232();
        return (self, element);
    }

    function shiftInt232(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int232 element) {
        element = self.shiftInt232();
        return (self, element);
    }

    function unshiftInt232(
        Bytes32Builder.Builder memory self,
        int232 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt232(element);
        return self;
    }
    function parseUint232(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint232 element) {
        return self.parseUint232(offset);
    }

    function pushUint232(
        Bytes32Builder.Builder memory self,
        uint232 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint232(element);
        return self;
    }

    function popUint232(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint232 element) {
        element = self.popUint232();
        return (self, element);
    }

    function shiftUint232(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint232 element) {
        element = self.shiftUint232();
        return (self, element);
    }

    function unshiftUint232(
        Bytes32Builder.Builder memory self,
        uint232 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint232(element);
        return self;
    }
    function parseBytes30(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes30 element) {
        return self.parseBytes30(offset);
    }

    function pushBytes30(
        Bytes32Builder.Builder memory self,
        bytes30 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes30(element);
        return self;
    }

    function popBytes30(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes30 element) {
        element = self.popBytes30();
        return (self, element);
    }

    function shiftBytes30(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes30 element) {
        element = self.shiftBytes30();
        return (self, element);
    }

    function unshiftBytes30(
        Bytes32Builder.Builder memory self,
        bytes30 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes30(element);
        return self;
    }
    function parseInt240(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int240 element) {
        return self.parseInt240(offset);
    }

    function pushInt240(
        Bytes32Builder.Builder memory self,
        int240 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt240(element);
        return self;
    }

    function popInt240(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int240 element) {
        element = self.popInt240();
        return (self, element);
    }

    function shiftInt240(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int240 element) {
        element = self.shiftInt240();
        return (self, element);
    }

    function unshiftInt240(
        Bytes32Builder.Builder memory self,
        int240 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt240(element);
        return self;
    }
    function parseUint240(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint240 element) {
        return self.parseUint240(offset);
    }

    function pushUint240(
        Bytes32Builder.Builder memory self,
        uint240 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint240(element);
        return self;
    }

    function popUint240(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint240 element) {
        element = self.popUint240();
        return (self, element);
    }

    function shiftUint240(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint240 element) {
        element = self.shiftUint240();
        return (self, element);
    }

    function unshiftUint240(
        Bytes32Builder.Builder memory self,
        uint240 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint240(element);
        return self;
    }
    function parseBytes31(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes31 element) {
        return self.parseBytes31(offset);
    }

    function pushBytes31(
        Bytes32Builder.Builder memory self,
        bytes31 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes31(element);
        return self;
    }

    function popBytes31(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes31 element) {
        element = self.popBytes31();
        return (self, element);
    }

    function shiftBytes31(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes31 element) {
        element = self.shiftBytes31();
        return (self, element);
    }

    function unshiftBytes31(
        Bytes32Builder.Builder memory self,
        bytes31 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes31(element);
        return self;
    }
    function parseInt248(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int248 element) {
        return self.parseInt248(offset);
    }

    function pushInt248(
        Bytes32Builder.Builder memory self,
        int248 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt248(element);
        return self;
    }

    function popInt248(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int248 element) {
        element = self.popInt248();
        return (self, element);
    }

    function shiftInt248(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int248 element) {
        element = self.shiftInt248();
        return (self, element);
    }

    function unshiftInt248(
        Bytes32Builder.Builder memory self,
        int248 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt248(element);
        return self;
    }
    function parseUint248(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint248 element) {
        return self.parseUint248(offset);
    }

    function pushUint248(
        Bytes32Builder.Builder memory self,
        uint248 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint248(element);
        return self;
    }

    function popUint248(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint248 element) {
        element = self.popUint248();
        return (self, element);
    }

    function shiftUint248(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint248 element) {
        element = self.shiftUint248();
        return (self, element);
    }

    function unshiftUint248(
        Bytes32Builder.Builder memory self,
        uint248 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint248(element);
        return self;
    }
    function parseBytes32(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (bytes32 element) {
        return self.parseBytes32(offset);
    }

    function pushBytes32(
        Bytes32Builder.Builder memory self,
        bytes32 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushBytes32(element);
        return self;
    }

    function popBytes32(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes32 element) {
        element = self.popBytes32();
        return (self, element);
    }

    function shiftBytes32(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, bytes32 element) {
        element = self.shiftBytes32();
        return (self, element);
    }

    function unshiftBytes32(
        Bytes32Builder.Builder memory self,
        bytes32 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftBytes32(element);
        return self;
    }
    function parseInt256(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (int256 element) {
        return self.parseInt256(offset);
    }

    function pushInt256(
        Bytes32Builder.Builder memory self,
        int256 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushInt256(element);
        return self;
    }

    function popInt256(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int256 element) {
        element = self.popInt256();
        return (self, element);
    }

    function shiftInt256(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, int256 element) {
        element = self.shiftInt256();
        return (self, element);
    }

    function unshiftInt256(
        Bytes32Builder.Builder memory self,
        int256 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftInt256(element);
        return self;
    }
    function parseUint256(
        Bytes32Builder.Builder memory self,
        uint256 offset
    ) external pure returns (uint256 element) {
        return self.parseUint256(offset);
    }

    function pushUint256(
        Bytes32Builder.Builder memory self,
        uint256 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.pushUint256(element);
        return self;
    }

    function popUint256(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint256 element) {
        element = self.popUint256();
        return (self, element);
    }

    function shiftUint256(
        Bytes32Builder.Builder memory self
    ) external pure returns (Bytes32Builder.Builder memory, uint256 element) {
        element = self.shiftUint256();
        return (self, element);
    }

    function unshiftUint256(
        Bytes32Builder.Builder memory self,
        uint256 element
    ) external pure returns (Bytes32Builder.Builder memory) {
        self.unshiftUint256(element);
        return self;
    }
}
